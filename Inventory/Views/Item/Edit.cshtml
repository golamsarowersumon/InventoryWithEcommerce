@model Domain.ViewModels.ItemViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.ItemId)
                    @Html.HiddenFor(model => model.Product_Image)
                    @Html.HiddenFor(model => model.Product_Image1)
                    @Html.HiddenFor(model => model.Product_Image2)

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <h4 class="form-header text-uppercase">
                        <i class="fa fa-user-circle-o"></i>
                        Item Form
                    </h4>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CategoryId, ViewBag.categorylist as SelectList, "Select Catagory", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">

                        @Html.LabelFor(model => model.SubCategoryName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.SubCategoryId, ViewBag.subCategorylist as SelectList, "Select SubCatagory", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.SubSubCategoryName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.SubSubCategoryId, ViewBag.subSubCategoryList as SelectList, "Select SubSubCatagory", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SubSubCategoryId, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.SubSubSubCategoryName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.SubSubSubCategoryId, ViewBag.SubSubSubCategoryList as SelectList, "Select SubSubSubCatagory", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SubSubSubCategoryId, "", new { @class = "text-danger" })
                        </div>


                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.SubSubSubSubCategoryName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.SubSubSubSubCategoryId, ViewBag.subSubSubSubCategoryList as SelectList, "Select SubSubSubSubCatagory", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SubSubSubSubCategoryId, "", new { @class = "text-danger" })
                        </div>


                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.BrandName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.BrandId, ViewBag.brandlst as SelectList, "Select Brand", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                        </div>


                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.ModelName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.ModelId, ViewBag.modellst as SelectList, "Select Model", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ModelId, "", new { @class = "text-danger" })
                        </div>


                    </div>
                    <div class="form-group row">

                        @Html.LabelFor(model => model.UnitName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.UnitId, ViewBag.unitList as SelectList, "Select Unit Name", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group row">

                        @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.MethodId, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.MethodId, ViewBag.methodlst as SelectList, "Select Method", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MethodId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.ItemDetails, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.ItemDetails, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ItemDetails, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <label class="control-label col-md-2">Image1</label>
                        <div class="col-md-10" id="hide1">
                            @if (Model.Product_Image != null)
                            {
                                <img src="@Url.Content(Model.Product_Image)" height="80" width="100" />
                            }

                        </div>
                        <input type="file" name="File_Image" id="File_Image" />
                        <label class="control-label">Image2:</label>
                        <div class="col-md-10" id="hide2">
                            @if (Model.Product_Image1 != null)
                            {
                                <img src="@Url.Content(Model.Product_Image1)" height="80" width="100" />
                            }

                        </div>

                        <input type="file" name="File_Image1" id="File_Image1" />
                        <label class="control-label">Image3:</label>
                        <div class="col-md-10" id="hide3">
                            @if (Model.Product_Image2 != null)
                            {
                                <img src="@Url.Content(Model.Product_Image2)" height="80" width="100" />
                            }

                        </div>
                        <input type="file" name="File_Image2" id="File_Image2" />
                    </div>


                    <div class="form-footer pull-right">
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
                        <button type="submit" class="btn btn-success"><i class="fa fa-check-square-o"></i> Update</button>
                    </div>

                }
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script>
            $(document).ready(function () {
                $("#imgFile").click(function () {
                    $("#hide1").hide();
                })
                $("#imgFile1").click(function () {
                    $("#hide2").hide();
                })
                $("#imgFile2").click(function () {
                    $("#hide3").hide();
                })

            });
    </script>
}
