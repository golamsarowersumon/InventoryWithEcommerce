@model Domain.ViewModels.RightOfAccesViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    label {
        margin-bottom: 0px;
        font-weight: 100;
        text-align: left;
    }
    .table td{
        white-space: nowrap;
        border-top: 0px solid #dee2e6;
        font-weight:100;
        padding:5px 5px 5px 5px;
        text-align:left;
    }
</style>



<div class="modal fade show" id="infomodal" style="display: none; padding-right:10px;" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-info">
            <div class="modal-header bg-info">
                <h5 class="modal-title text-white">Your modal title here</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" id="box">

                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="table-responsive">
                            <table class="table">


                                <tbody>
                                    <tr style="padding-bottom:5px;">
                                        <td><label class="control-label">Order Id :</label></td>
                                        <td><label class="control-label" id="OrderId"></label></td>
                                        <td><label class="control-label">From Store :</label></td>
                                        <td><label class="control-label" id="FStore"></label></td>
                                        <td><label class="control-label">To Store :</label></td>
                                        <td><label class="control-label" id="ToStore"></label></td>

                                    </tr>
                                    <tr style="padding-bottom:5px;">
                                        <td><label class="control-label">Item Name</label></td>
                                        <td><label class="control-label" id="ItemName"></label></td>
                                        <td> <label class="control-label">Quantity</label></td>
                                        <td><label class="control-label" id="ItmQuantity"></label></td>
                                        <td><label class="control-label">Unit</label></td>
                                        <td><label class="control-label" id="UnitName"></label></td>

                                    </tr>
                                    <tr style="padding-bottom:5px;">
                                        <td> <label class="control-label">Condition</label></td>
                                        <td><label class="control-label" id="ConditionOfItem"></label></td>
                                        <td><label class="control-label">Transfer Type</label></td>
                                        <td><label class="control-label" id="TransferType"></label></td>
                                        <td><label class="control-label">Order Date</label></td>
                                        <td><label class="control-label" id="OrderDate"></label></td>

                                    </tr>
                                    <tr style="padding-bottom:5px;">
                                        <td><label class="control-label">Delivery Date</label></td>
                                        <td><label id="ODeliveryDate"></label></td>
                                        <td><label class="control-label">Order By</label></td>
                                        <td><label id="TransferOrderBy"></label></td>
                                        <td></td>
                                        <td></td>

                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-inverse-info" onclick="reload()" id="btnSave"><i class="fa fa-times"></i> Close</button>
                <button type="button" class="btn btn-info"><i class="fa fa-check-square-o"></i> Save changes</button>
                <button type="button" class="btn btn-primary waves-effect waves-light m-1" onclick="printContent('box');"> <i class="fa fa-home"></i>Print</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade show" id="warningmodal" style="display: none; padding-right:10px;" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-info">
            <div class="modal-header bg-info">
                <h5 class="modal-title text-white">Your modal title here</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" id="box">

                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="table-responsive">
                            <table class="table">


                                <tbody>
                                        <tr style="padding-bottom:5px;">
                                        <td><label class="control-label">Transfer Id :</label></td>
                                        <td><label class="control-label" id="TransferId"></label></td>
                                        <td><label class="control-label">From Store :</label></td>
                                        <td><label class="control-label" id="FromStore"></label></td>
                                        <td><label class="control-label">To Store :</label></td>
                                        <td><label class="control-label" id="Tstore"></label></td>

                                    </tr>
                                    <tr style="padding-bottom:5px;">
                                        <td><label class="control-label">Transfer Details Id </label></td>
                                        <td><label class="control-label" id="TDetailsId"></label></td>
                                        <td> <label class="control-label">Item Name</label></td>
                                        <td><label class="control-label" id="ITName"></label></td>
                                        <td><label class="control-label">Quantity</label></td>
                                        <td><label class="control-label" id="ItQty"></label></td>

                                    </tr>
                                    <tr style="padding-bottom:5px;">
                                        <td><label class="control-label">Transfer Order Id </label></td>
                                        <td><label class="control-label" id="TransferOrderId"></label></td>
                                        <td><label class="control-label">Transfer Type</label></td>
                                        <td><label class="control-label" id="TransferType"></label></td>
                                        <td><label class="control-label">Order Date</label></td>
                                        <td><label class="control-label" id="OrderDate"></label></td>

                                    </tr>
                                    <tr style="padding-bottom:5px;">
                                        <td><label class="control-label">Delivery Date</label></td>
                                        <td><label id="ODeliveryDate"></label></td>
                                        <td><label class="control-label">Order By</label></td>
                                        <td><label id="TransferOrderBy"></label></td>
                                        <td></td>
                                        <td></td>

                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-inverse-info" onclick="reload()" id="btnSave"><i class="fa fa-times"></i> Close</button>
                <button type="button" class="btn btn-info"><i class="fa fa-check-square-o"></i> Save changes</button>
                <button type="button" class="btn btn-primary waves-effect waves-light m-1" onclick="printContent('box');"> <i class="fa fa-home"></i>Print</button>
            </div>
        </div>
    </div>
</div>


@using (Html.BeginForm("Search", "RightOfAccess", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="panel panel-success ">
                <div class="panel-heading"><div class="panel-title">Right Of Access </div></div>
                <div class="panel-body">

                    <div class="row" style="padding:5px 5px;">
                        <div class="col-lg-5 col-md-5 col-sm-12 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreId, htmlAttributes: new { @class = "control-label col-md-3 fontsize mt8" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.StoreId, ViewBag.StoreList as SelectList, "Select Store", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.StoreId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-5 col-md-5 col-sm-12 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ItemId, htmlAttributes: new { @class = "control-label col-md-3 fontsize mt8" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.ItemId, ViewBag.ItemList as SelectList, "Select Item", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ItemId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">
                            <button class="btn btn-secondary waves-effect waves-light m-1" type="submit" name="search" value="Search">
                                <i class="fa fa-search"></i> Search
                            </button>

                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>






    <div class="row">
        @if (Model == null)

        {

        }

        else
        {
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                      <div class="row">
                            <div class="col-md-12 col-lg-12 col-sm-12 ">
                                <span class="panel-title">
                                   


                                    <button class="btn btn-md btn-info pull-right" type="submit" name="cancel" value="Cancel"
                                            formaction="CancelForm" formmethod="post" id="btnCancel" disabled="disabled">
                                        <i class="fa fa-save"></i> Cancel
                                    </button>
                                    <button class="btn btn-md btn-info pull-right" ttype="submit" name="save" value="Save"
                                            formaction="Save" formmethod="post" id="btnSave" disabled="disabled">
                                        <i class="fa fa-save"></i> Receive
                                    </button>
                                </span>
                            </div>
                        </div>
                        @if (Model.rightOfAccesViewModelslist.Any())
                        {


                            <div class="table-responsive">
                                <table class="table table-bordered table-hover table-striped">
                                    <thead>
                                        <tr>
                                            <th><input type="checkbox" class="allGridCheck"></th>
                                            <th style="display:none">Temp Id</th>
                                            <th style="display:none">Inventory Id</th>
                                            <th style="display:none">Transfer Id</th>
                                            <th style="display:none">Order Id</th>
                                            <th>From Store</th>
                                            <th>To Store</th>
                                            <th>Item Name</th>
                                            <th>Item Quantity</th>
                                            <th>Unit Name</th>
                                            <th>Receive Quantity</th>
                                            <th>Pending Quantity</th>
                                            <th>Item/Product Price</th>
                                            <th>Reason</th>
                                            <th>Reference for Order</th>
                                            <th>Reference for Transfer</th>
                                            <th style="width:200px;">Remarks</th>


                                        </tr>
                                    </thead>
                                    <tbody class="GridContent" id="GridBody">

                                        @for (int i = 0; i < Model.rightOfAccesViewModelslist.Count; i++)
                                        {

                                            <tr class="GridFields">
                                                <td>@Html.CheckBoxFor(m => m.rightOfAccesViewModelslist[i].IsChecked, new { @class = "singleGridCheck" })</td>

                                                <td style="display:none">
                                                    @Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].TempId, new { @class = "form-control", @autofocus = true, @Readonly = "readonly", @Value = Model.rightOfAccesViewModelslist[i].TempId })
                                                </td>

                                                <td style="display:none">
                                                    @Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].Inv_HD_ID, new { @class = "form-control", @autofocus = true, @Readonly = "readonly", @Value = Model.rightOfAccesViewModelslist[i].Inv_HD_ID })
                                                </td>
                                                <td style="display:none">@Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].TransferId, new { @class = "form-control", @autofocus = true, @Readonly = "readonly", @Value = Model.rightOfAccesViewModelslist[i].TransferId })</td>
                                                <td style="display:none">@Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].TransferDetailsId, new { @class = "form-control", @autofocus = true, @Readonly = "readonly", @Value = Model.rightOfAccesViewModelslist[i].TransferDetailsId })</td>
                                                <td style="display:none">@Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].TransferOrderId, new { @class = "form-control", @autofocus = true, @Readonly = "readonly", @Value = Model.rightOfAccesViewModelslist[i].TransferOrderId })</td>
                                                <td>
                                                    @Model.rightOfAccesViewModelslist[i].FromStoreName
                                                    @Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].FromStoreId, new { @class = "form-control", @autofocus = true, @Value = Model.rightOfAccesViewModelslist[i].FromStoreId })

                                                </td>
                                                <td>
                                                    @Model.rightOfAccesViewModelslist[i].ToStoreName
                                                    @Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].ToStoreId, new { @class = "form-control", @autofocus = true, @Value = Model.rightOfAccesViewModelslist[i].ToStoreId })
                                                </td>
                                                <td>
                                                    @Model.rightOfAccesViewModelslist[i].ItemName
                                                    @Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].ItemId, new { @class = "form-control", @autofocus = true, @Value = Model.rightOfAccesViewModelslist[i].ItemId })
                                                    @*@Html.DropDownListFor(m => m.TransferViewModelList[i].ItemId, new SelectList(ViewBag.ItemList, "ItemId", "ItemName", @Model.TransferViewModelList[i].ItemId), new { @class = "form-control custom-select-box" })
                                    @Html.ValidationMessageFor(m => m.TransferViewModelList[i].ItemId, "", new { @class = "text-danger" })*@
                                                </td>

                                                <td>
                                                    @Model.rightOfAccesViewModelslist[i].ItemQuantity
                                                    @Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].ItemQuantity, new { @class = "form-control", @autofocus = true, @Readonly = "readonly", @Value = Model.rightOfAccesViewModelslist[i].ItemQuantity })
                                                </td>

                                                <td>
                                                    @Model.rightOfAccesViewModelslist[i].UnitName

                                                </td>

                                                <td>
                                                    @Model.rightOfAccesViewModelslist[i].ReceiveItemQuantity
                                                    @Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].ReceiveItemQuantity, new { @class = "form-control", @autofocus = true, @Readonly = "readonly", @Value = Model.rightOfAccesViewModelslist[i].ReceiveItemQuantity })

                                                </td>
                                                <td>
                                                    @Model.rightOfAccesViewModelslist[i].PendingItemQuantity
                                                    @Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].PendingItemQuantity, new { @class = "form-control", @autofocus = true, @Readonly = "readonly", @Value = Model.rightOfAccesViewModelslist[i].PendingItemQuantity })
                                                </td>

                                                <td>
                                                    @Model.rightOfAccesViewModelslist[i].PO_Price
                                                    @Html.HiddenFor(m => m.rightOfAccesViewModelslist[i].PO_Price, new { @class = "form-control", @autofocus = true, @Readonly = "readonly", @Value = Model.rightOfAccesViewModelslist[i].PO_Price })
                                                </td>
                                                <td>
                                                    @Model.rightOfAccesViewModelslist[i].Reason


                                                </td>

                                                <td onclick="LoadOrder(@Model.rightOfAccesViewModelslist[i].TransferOrderId)">
                                                    <a href="#" onclick="LoadOrder(@Model.rightOfAccesViewModelslist[i].TransferOrderId)">@Model.rightOfAccesViewModelslist[i].TransferOrderId</a>
                                                </td>
                                                <td>
                                                    <a href="#" onclick="LoadTransfer(@Model.rightOfAccesViewModelslist[i].TransferDetailsId)">@Model.rightOfAccesViewModelslist[i].TransferDetailsId</a>
                                                </td>
                                                <td>
                                                    @Html.TextAreaFor(m => m.rightOfAccesViewModelslist[i].Remarks, 1, 100, new { @class = "form-control setwidth", @autofocus = true, @Value = Model.rightOfAccesViewModelslist[i].Remarks })

                                                </td>


                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                        }



                    </div>
                </div>
            </div>
        }
    </div>



}




@section Scripts {

    <script>

        $(document).ready(function () {
            var btnName = localStorage.getItem("btnName");
            if (btnName) {
                $('.btn-save').html('<i class="fa fa-edit"></i> ' + btnName);
                localStorage.removeItem("btnName");
            }
            $(".btn-edit").click(function () {
                localStorage.setItem("btnName", "Update");
            });

            $(document).on('click', '.allGridCheck, .singleGridCheck', function (event) {
                if ($(event.target).is(':checked')) {
                    $('#btnCancel').prop('disabled', false);
                    $('#btnSave').prop('disabled', false);
                }
                if ($('.singleGridCheck').length === $('.singleGridCheck:checkbox:not(":checked")').length) {
                    $('#btnCancel').prop('disabled', true);
                    $('#btnSave').prop('disabled', true);
                }
            });







        });


        $(document).on('click', '.allGridCheck', function () {
            if (this.checked) {
                $('.GridContent input:checkbox').prop('checked', true);
            } else {
                $('.GridContent input:checkbox').prop('checked', false);
            }
        });

        $(document).on('click', '.singleGridCheck', function () {
            if ($('.singleGridCheck:checked').length === $('.singleGridCheck').length) {
                $('.allGridCheck:checkbox').prop('checked', true);
            } else {
                $('.allGridCheck:checkbox').prop('checked', false);
            }
        });


  function LoadOrder(id) {
            //console.log(id);
            //alert(id);
            var Orderid = id;
            $("#infomodal").modal("toggle");
           

            if (Orderid) {
                    $.ajax({
                        type: "Post",
                        url: '@Url.Action("GetOrderInformation", "TransferOrder")',
                        data: {
                            TransferOrderId: Orderid
                        },

                        success: function (data) {
                            console.log(data);

                            $.each(data, function (key, value) {
                                var da = new Date(parseInt(value.TransferOrderDeliverydate.replace("/Date(", "").replace(")/", ""), 10));
                                let TDdate = JSON.stringify(da);
                                TDdate = TDdate.slice(1, 11);
                                var dab = new Date(parseInt(value.TransferOrderdate.replace("/Date(", "").replace(")/", ""), 10));
                                let TOdate = JSON.stringify(dab);
                                TOdate = TOdate.slice(1, 11);
                               
                                $("#OrderId").text(Orderid); 
                                $("#ItemName").text(value.ItemName); 
                                $("#ItmQuantity").text(value.TransactionQuantity);
                                $("#FStore").text(value.FromStoreName ); 
                                $("#ToStore").text(value.ToStoreName ); 
                                $("#UnitName").text(value.UnitName); 
                                $("#ConditionOfItem").text(value.ConditionOfItemName); 
                                $("#TransferType").text(value.TransferTypeName); 

                                $("#OrderDate").text(TOdate); 
                                $("#ODeliveryDate").text(TDdate); 
                                $("#TransferOrderBy").text(value.TransferOrderby); 
                                
 });
                        }
                });


            }
        }




          function LoadTransfer(id) {
            //console.log(id);
            //alert(id);
            var TransferDetailsid = id;
              $("#warningmodal").modal("toggle");
            

              if (TransferDetailsid) {
                    $.ajax({
                        type: "Post",
                        url: '@Url.Action("GetTransferInformation", "Transfer")',
                        data: { 
                            TransferDetailsId: TransferDetailsid
                        },

                        success: function (data) {
                            console.log(data);

                            $.each(data, function (key, value) {
                                //var da = new Date(parseInt(value.TransferOrderDeliverydate.replace("/Date(", "").replace(")/", ""), 10));
                                //let TDdate = JSON.stringify(da);
                                //TDdate = TDdate.slice(1, 11);
                                //var dab = new Date(parseInt(value.TransferOrderdate.replace("/Date(", "").replace(")/", ""), 10));
                                //let TOdate = JSON.stringify(dab);
                                //TOdate = TOdate.slice(1, 11);
                               
                                $("#TransferId").text(value.TransferId ); 
                                $("#TDetailsId").text(value.TransferDetailsId); 
                                $("#TransferOrderId").text(value.TransferOrderId);
                                $("#FromStore").text(value.FromStoreName); 
                                $("#Tstore").text(value.ToStoreName); 
                                $("#ITName").text(value.ItemName);
                                $("#ItQty").text(value.TransactionQuantity);


                                //$("#ConditionOfItem").text(value.ConditionOfItemName); 
                                //$("#TransferType").text(value.TransferTypeName); 

                                //$("#OrderDate").text(TOdate); 
                                //$("#ODeliveryDate").text(TDdate); 
                                //$("#TransferOrderBy").text(value.TransferOrderby); 
                                
 });
                        }
                });


            }
        }


        function printContent(el) {
            var restorepage = $('body').html();
            var printcontent = $('#' + el).clone();
            $('body').empty().html(printcontent);
            window.print();
            $('body').html(restorepage);
           
        }

        function reload() {
            location.reload();
        }


    </script>
}

